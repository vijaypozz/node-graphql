import { AbstractResponse } from '../AbstractResponse';
import { CommentData, CommentReplyData } from '../data/CommentData';
import { InnerId } from '../data/Common';
/**
 * Class that represents a response from the Get Comment Request.
 *
 * @author Tiago Grosso <tiagogrosso99@gmail.com>
 * @since 0.6.0
 */
export declare class GetCommentResponse extends AbstractResponse<CommentData> {
    /**
     * Gets the id of the comment.
     *
     * @returns the id of the comment.
     */
    getId(): string;
    /**
     * Gets whether the comment is hidden.
     *
     * @returns whether the comment is hidden.
     */
    isHidden(): boolean | undefined;
    /**
     * Gets the number of likes in the comment.
     *
     * @returns the number of likes in the comment.
     */
    getLikeCount(): number | undefined;
    /**
     * Gets the parent media of the comment.
     *
     * @returns the parent media of the comment.
     */
    getParentMedia(): InnerId | undefined;
    /**
     * Gets the parent media id of the comment.
     *
     * @returns the parent media id of the comment.
     */
    getParentMediaId(): string | undefined;
    /**
     * Gets the replies to the comment.
     *
     * @returns the replies to the comment.
     */
    getReplies(): CommentReplyData[] | undefined;
    /**
     * Gets the text of the comment.
     *
     * @returns the text of the comment.
     */
    getText(): string | undefined;
    /**
     * Gets the timestamp of the comment.
     *
     * @returns the timestamp of the comment.
     */
    getTimestamp(): string | undefined;
    /**
     * Gets the user that owns the comment.
     *
     * @returns the user that owns the comment.
     */
    getUser(): InnerId | undefined;
    /**
     * Gets the id user that owns the comment.
     *
     * @returns the id user that owns the comment.
     */
    getUserId(): string | undefined;
    /**
     * Gets the username of the owner of the comment.
     *
     * @returns the username of the owner of the comment.
     */
    getUsername(): string | undefined;
}
