import { AxiosResponse } from 'axios';
import { LifetimeMetric, MetricPeriod } from '../../../Enums';
import { AbstractGetPageInsightsRequest } from './AbstractGetPageInsightsRequest';
import { GetPageLifetimeInsightsResponse } from './GetPageLifetimeInsightsResponse';
/**
 * A Page Insights Get Request that queries a lifetime metric.
 *
 * @author Tiago Grosso <tiagogrosso99@gmail.com>
 * @since 0.2.0
 */
export declare class GetPageLifetimeInsightsRequest extends AbstractGetPageInsightsRequest<LifetimeMetric, GetPageLifetimeInsightsResponse> {
    /**
     * The constructor.
     * @param accessToken the access token.
     * @param pageId the page id.
     * @param metrics the metrics to retrieve from the API. If no metric is specified, all are retrieved.
     */
    constructor(accessToken: string, pageId: string, ...metrics: LifetimeMetric[]);
    /**
     * @inheritdoc
     */
    protected parseResponse(response: AxiosResponse<never>): GetPageLifetimeInsightsResponse;
    /**
     * @inheritdoc
     */
    protected period(): MetricPeriod;
}
